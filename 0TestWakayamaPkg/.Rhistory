iris[-5] %>% pivot_longer(cols = everything()) %>%
ggplot(aes(x = 1, y = value, group=name, color=name))+geom_point()
iris[-5] %>% pivot_longer(cols = everything()) %>%
ggplot(aes(x = name, y = value, group=name, color=name))+geom_point()
iris[-5] %>% pivot_longer(cols = everything()) %>%
ggplot(aes(x = name, y = value, group=name, color=name))+
geom_bar()
iris[-5] %>% pivot_longer(cols = everything()) %>%
ggplot(aes(x = name, y = value, group=name, color=name))+geom_point()
iris[-5] %>% pivot_longer(cols = everything())
t<-iris[-5] %>% pivot_longer(cols = everything())
t
library(plotly)
plot_ly(data = t)
plot_ly(data = t, .x=name, .y=value)
?plot_ly
plot_ly(economics, x = ~pop)
economics
economics
plot_ly(economics, x = ~date, y = ~pop)
plot_ly(z = ~volcano)
volcano
plot_ly(data = t, x=~name, y=~value)
plot_ly(data = t, y=~name, x=~value)
plot_ly(data = t,  x=~value)
plot_ly(data = t,  x=~value, frame = ~name)
# Attributes are documented in the figure reference -> https://plot.ly/r/reference
# You might notice plot_ly() has named arguments that aren't in this figure
# reference. These arguments make it easier to map abstract data values to
# visual attributes.
p <- plot_ly(iris, x = ~Sepal.Width, y = ~Sepal.Length)
p
add_markers(p, color = ~Petal.Length, size = ~Petal.Length)
add_markers(p, color = ~Species)
p
add_markers(p, color = ~Species)
add_markers(p, color = ~Species, colors = "Set1")
add_markers(p, symbol = ~Species)
add_paths(p, linetype = ~Species)
add_markers(p, color = ~Petal.Length, size = ~Petal.Length)
add_markers(p, color = ~Species)
add_markers(p, color = ~Species, colors = "Set1")
plot_ly(economics, x = ~date, color = I("black"))
plot_ly(economics, x = ~date, color = I("black")) %>%
add_lines(y = ~uempmed) %>%
add_lines(y = ~psavert, color = I("red"))
plot_ly(economics, x = ~date, color = I("black"))
%>%   add_lines(y = ~psavert, color = I("red"))
plot_ly(economics, x = ~date, color = I("black")) %>%
add_lines(y = ~psavert, color = I("red"))
plot_ly(economics, x = ~date, color = I("black")) %>%
add_lines(y = ~uempmed)
plot_ly(economics, x = ~date, color = I("black")) %>%
add_lines(y = ~uempmed) %>%
add_lines(y = ~psavert, color = I("red"))
plot_ly(economics, x = ~date, color = I("black"))
economics$date
economics$date %>% table()
colnames(iris)
colnames(iris) %>% cat()
plot_ly(data = iris, x="Sepal.Length",
"Sepal.Width"
)
plot_ly(data = iris, x="Sepal.Length",
"Sepal.Width"
)
plot_ly(data = iris, x="Sepal.Length",
"Sepal.Width"
)
plot_ly(data = iris, x=~Sepal.Length)
plot_ly(data = iris, x=~Sepal.Length,
y=~Sepal.Width)
plot_ly(data = iris, x=~Sepal.Length,
y=~Sepal.Width)+add_lines()
plot_ly(data = iris, x=~Sepal.Length,
y=~Sepal.Width) %>%
add_lines()
plot_ly(data = iris, x=~Sepal.Length,
y=~Sepal.Width, frame = ~Sepal.Length) %>%
add_lines()
plot_ly(data = iris, x=~Sepal.Length,
y=~Sepal.Width, frame = ~Sepal.Length) %>%
add_paths()
mpg %>%
group_by(model) %>%
summarise(c = mean(cty), h = mean(hwy)) %>%
mutate(model = forcats::fct_reorder(model, c)) %>%
plot_ly() %>%
add_segments(
x = ~c, y = ~model,
xend = ~h, yend = ~model,
color = I("gray"), showlegend = FALSE
) %>%
add_markers(
x = ~c, y = ~model,
color = I("blue"),
name = "mpg city"
) %>%
add_markers(
x = ~h, y = ~model,
color = I("red"),
name  = "mpg highway"
) %>%
layout(xaxis = list(title = "Miles per gallon"))
aa<-mpg %>%
group_by(model) %>%
summarise(c = mean(cty), h = mean(hwy)) %>%
mutate(model = forcats::fct_reorder(model, c))
aa
plot_ly(data = aa, x=~c, y=~h)
plot_ly(data = aa, x=~c, y=~h, color = ~model)
plot_ly(data = aa,  y=~h, color = ~model)
plot_ly(data = aa,  y=~h)
aa
%>%
plot_ly() %>%
add_segments(
x = ~c, y = ~model,
xend = ~h, yend = ~model,
color = I("gray"), showlegend = FALSE
)
aa%>%
plot_ly() %>%
add_segments(
x = ~c, y = ~model,
xend = ~h, yend = ~model,
color = I("gray"), showlegend = FALSE
)
aa
aa%>%
plot_ly() %>%
add_segments(
x = ~c, y = ~model,
xend = ~h, yend = ~model
)
aa%>%
plot_ly() %>%
add_segments(
x = ~c, y = ~model,
xend = ~h
# , yend = ~model
)
aa%>%
plot_ly() %>%
add_segments(
x = ~c, y = ~model,
xend = ~h
, yend = ~model
)
ls()
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
getwd()
d<-read_csv("../..//data/DataFormat.csv", skip=1, locale = readr::locale(encoding = "CP932"))
d<-d[-95,]
d %>% dim()
d<-d %>% rename(key=X1)
d %>% DT::datatable()
var<-read.csv("../..//var_name_Eng.csv")
colnames(d)<-var$var_name_Eng
# d %>% DT::datatable()
read.csv("../../JpnEng.csv") %>% DT::datatable()
d_common<-d[, sapply(d[48,], is.na)]
d_common<-d_common[1:47, ]
# d_common%>% DT::datatable()
d_common<-d %>% select(1:6) %>% .[1:47,] %>% bind_cols(d_common)
d_common %>% DT::datatable()
d_common %>% dim()
d_common %>% colnames() %>%tbl_df() %>%  DT::datatable()
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
getwd()
d<-read_csv("../..//data/DataFormat.csv", skip=1, locale = readr::locale(encoding = "CP932"))
d<-d[-95,]
d %>% dim()
d<-d %>% rename(key=X1)
d %>% DT::datatable()
var<-read.csv("../..//var_name_Eng.csv")
colnames(d)<-var$var_name_Eng
# d %>% DT::datatable()
read.csv("../../JpnEng.csv") %>% DT::datatable()
d_common<-d[, sapply(d[48,], is.na)]
d_common<-d_common[1:47, ]
# d_common%>% DT::datatable()
d_common<-d %>% select(1:6) %>% .[1:47,] %>% bind_cols(d_common)
d_common %>% DT::datatable()
d_common %>% dim()
d_common %>% colnames() %>%tbl_df() %>%  DT::datatable()
name <- function(x) {
!is.na(x)
}
d_mf<-d[, sapply(d[48,], name)]
d_mf %>% DT::datatable()
d_mf %>% dim()
d_m<-d_mf %>% filter(sex=="M")
d_f<-d_mf %>% filter(sex=="F")
d_m %>% DT::datatable()
d_m
d_m$LE_2015
d_m$HLE_2016
plot_ly(data = d_m, x=~LE_2015, y=~HLE_2016)
d_m$pref.J
plot_ly(data = d_m, x=~LE_2015, y=~pref.J)
d_m %>% select(pref.J, LE_2015,HLE_2016 )
d_m %>% select(pref.J, LE_2015,HLE_2016 )
aa<-d_m %>% select(pref.J, LE_2015,HLE_2016 )
aa %>% plot_ly()
aa %>% plot_ly() %>% add_segments()
aa %>% plot_ly() %>% add_segments(x = ~LE_2015, y=~pref.J, xend = ~HLE_2016,
yend = ~pref.J
)
aa
aa %>%arrange(aa$LE_2015)
aa %>%arrange(-aa$LE_2015)
aa %>%arrange(-aa$LE_2015) %>%
plot_ly() %>% add_segments(x = ~LE_2015, y=~pref.J, xend = ~HLE_2016,
yend = ~pref.J
)
aa %>%arrange(-aa$LE_2015) %>%
plot_ly() %>% add_segments(x = ~HLE_2016, y=~pref.J, xend = ~LE_2015,
yend = ~pref.J
)
aa %>%   plot_ly() %>% add_segments(x = ~HLE_2016, y=~pref.J, xend = ~LE_2015,
yend = ~pref.J
)
aa<-d_m %>% select(pref.J, pref.E, LE_2015,HLE_2016 )
aa %>%   plot_ly() %>% add_segments(x = ~HLE_2016, y=~pref.E, xend = ~LE_2015,
yend = ~pref.E
)
aa %>% plot_ly() %>% add_segments(x = ~HLE_2016, y=~pref.E, xend = ~LE_2015,
yend = ~pref.E
)
ls()
system("open .")
# data import
library(readxl)
d<-read_excel("./data1.xlsx",1); d<-d[-95,] #男女データ
f<-d[d$sex==0,];m<-d[d$sex==1,] # 男女別分けデータ
LE<-d[, c("LE.75","LE.85","LE.90","LE.95","LE.00","LE.05","LE.10","LE.15")]
LE
LE<-d[, c("LE.75","LE.85","LE.90","LE.95","LE.00","LE.05","LE.10","LE.15")]
LE
d
LE
Wakayama::pref
rep(Wakayama::pref, 2)
suppressMessages(library(tidyverse))
Wakayama::pref %>% bind_rows(Wakayama::pref)
d$sex
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE)
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df()
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols = 4:11)
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols = 4:11, name=year, value=LE)
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols=4:11, names_to="year")
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols=4:11, names_to="year", values_to=LE)
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols=4:11, names_to="year", values_to="LE")
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols=4:11, names_to="year", values_to="LE") %>%
nest(4:5)
tt
tt$data
tt<-Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols=4:11, names_to="year", values_to="LE") %>%
nest(4:5)
tt$data
Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>%
tbl_df() %>% pivot_longer(cols=4:11, names_to="year", values_to="LE")
tt<-Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE)
tt
tt<-Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>% tbl_df()
tt
d$sex
tt %>% bind_cols(d$sex)
tt %>% bind_cols(d$sex) %>% select(sex)
tt %>% bind_cols(sex=d$sex) %>% select(sex)
tt %>% bind_cols(sex=d$sex) %>% select(sex, everything())
tt<-Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>% tbl_df()
tt1<-tt %>% bind_cols(sex=d$sex) %>% select(sex, everything())
tt1
tt1 %>% pivot_longer(cols=5:12)
tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE")
tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE") %>%
nest(5:5)
tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE") %>%
nest(5:6)
tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE")
tt2<-tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE")
tt2
tt2
tt2 %>% nest(year, sex)
tt2 %>% nest(-year, -sex)
tt3
tt3<-tt2 %>% nest(-year, -sex)
tt3$data
tt3$data[1]
tt
tt2
tt2
tt2 %>% group_by(year, sex)
tt2 %>% group_by(year, sex) %>% mutate(rank=rank(LE))
tt2 %>% group_by(year, sex) %>% mutate(rank=rank(-LE))
tt2<-tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE") %>%
group_by(year, sex) %>% mutate(rank=rank(-LE))
tt<-Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>% tbl_df()
tt1<-tt %>% bind_cols(sex=d$sex) %>% select(sex, everything())
tt2<-tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE") %>%
group_by(year, sex) %>% mutate(rank=rank(-LE))
tt3<-tt2 %>% nest(-year, -sex)
tt2<-tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE") %>%
group_by(year, sex) %>% mutate(rank=rank(-LE))
tt2
tt2<-tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE") %>%
group_by(year, sex) %>% mutate(rank=rank(-LE)) %>% ungroup()
tt<-Wakayama::pref %>% bind_rows(Wakayama::pref) %>% bind_cols(LE) %>% tbl_df()
tt1<-tt %>% bind_cols(sex=d$sex) %>% select(sex, everything())
tt2<-tt1 %>% pivot_longer(cols=5:12, names_to="year", values_to="LE") %>%
group_by(year, sex) %>% mutate(rank=rank(-LE)) %>% ungroup()
tt3<-tt2 %>% nest(-year, -sex)
tt3
tt3$data[1]
tt2
library(plotly)
tt2 %>% plot_ly(x=~year, y=~LE)
tt2 %>% plot_ly(x=~year, y=~LE, type="scatter")
tt3
tt2
tt2[,30]
tt2[30,]
tt2[25:30,]
tt2 %>% filter(tt2$pref.E=Wakayama)
tt2 %>% filter(tt2$pref.E=Wakayama)
tt2 %>% filter(tt2$pref.E="Wakayama")
tt2 %>% filter(tt2$pref.E==Wakayama)
tt2 %>% filter(tt2$pref.E=="Wakayama")
matplot(t(LE) ,  xlab="", ylab="", type="n", axes=F, xlim=c(0.5, 8.5))
matpoints(t(LE) ,  xlab="", ylab="", type="l",
col=rgb(26/255,26/255,26/255, alpha=0.05),
lty=rep(1,47),
lwd=3)
axis(side=1,
labels=c("1975年", "1985年", "1990年", "1995年", "2000年", "2005年", "2010年", "2015年"),
at=1:8,
las=3,
cex.axis = 1.5)
# # setwd("C:\\Users\\ds-pcr113a\\Dropbox\\00000健康衛生(滋賀県)\\data\\R")
# load("HL.Rdata")
# data import
library(readxl)
d<-read_excel("./data1.xlsx",1); d<-d[-95,] #男女データ
f<-d[d$sex==0,];m<-d[d$sex==1,] # 男女別分けデータ
LE<-d[, c("LE.75","LE.85","LE.90","LE.95","LE.00","LE.05","LE.10","LE.15")]
matplot(t(LE) ,  xlab="", ylab="", type="n", axes=F, xlim=c(0.5, 8.5))
matpoints(t(LE) ,  xlab="", ylab="", type="l",
col=rgb(26/255,26/255,26/255, alpha=0.05),
lty=rep(1,47),
lwd=3)
axis(side=1,
labels=c("1975年", "1985年", "1990年", "1995年", "2000年", "2005年", "2010年", "2015年"),
at=1:8,
las=3,
cex.axis = 1.5)
axis(side=2,
labels=c("70歳", "75歳", "80歳", "85歳", "90歳"),
at=seq(70,90,5),
cex.axis=1.5)
matplot(t(LE) ,  xlab="", ylab="", type="n", axes=F, xlim=c(0.5, 8.5))
matplot(t(LE) ,  xlab="", ylab="", type="n", axes=F, xlim=c(0.5, 8.5))
matpoints(t(LE) ,  xlab="", ylab="", type="l",
col=rgb(26/255,26/255,26/255, alpha=0.05),
lty=rep(1,47),
lwd=3)
matplot(t(LE) ,  xlab="", ylab="", type="n", axes=F, xlim=c(0.5, 8.5))
matpoints(t(LE) ,  xlab="", ylab="", type="l",
col=rgb(26/255,26/255,26/255, alpha=0.05),
lty=rep(1,47),
lwd=3)
axis(side=1,
labels=c("1975年", "1985年", "1990年", "1995年", "2000年", "2005年", "2010年", "2015年"),
at=1:8,
las=3,
cex.axis = 1.5)
axis(side=2,
labels=c("70歳", "75歳", "80歳", "85歳", "90歳"),
at=seq(70,90,5),
cex.axis=1.5)
text(2, 85, "女性", cex=2)
text(4, 80, "男性", cex=2)
matpoints(t(LE[c(30,30+47),]) , type="l",
col=rgb(0,0,1, alpha=0.7),
lty=rep(1,47), lwd=3)
# 和歌山県
matpoints(t(LE[c(30,30+47),]) , type="l",
col=rgb(0,1,0, alpha=0.7),
lty=rep(1,47), lwd=3)
matplot(t(LE) ,  xlab="", ylab="", type="n", axes=F, xlim=c(0.5, 8.5))
matpoints(t(LE) ,  xlab="", ylab="", type="l",
col=rgb(26/255,26/255,26/255, alpha=0.05),
lty=rep(1,47),
lwd=3)
axis(side=1,
labels=c("1975年", "1985年", "1990年", "1995年", "2000年", "2005年", "2010年", "2015年"),
at=1:8,
las=3,
cex.axis = 1.5)
axis(side=2,
labels=c("70歳", "75歳", "80歳", "85歳", "90歳"),
at=seq(70,90,5),
cex.axis=1.5)
text(2, 85, "女性", cex=2)
text(4, 80, "男性", cex=2)
# 和歌山県
matpoints(t(LE[c(30,30+47),]) , type="l",
col=rgb(0,1,0, alpha=0.7),
lty=rep(1,47), lwd=3)
matplot(t(LE) ,  xlab="", ylab="", type="n", axes=F, xlim=c(0.5, 8.5))
matpoints(t(LE) ,  xlab="", ylab="", type="l",
col=rgb(26/255,26/255,26/255, alpha=0.05),
lty=rep(1,47),
lwd=3)
axis(side=1,
labels=c("1975年", "1985年", "1990年", "1995年", "2000年", "2005年", "2010年", "2015年"),
at=1:8,
las=3,
cex.axis = 1.5)
axis(side=2,
labels=c("70歳", "75歳", "80歳", "85歳", "90歳"),
at=seq(70,90,5),
cex.axis=1.5)
text(2, 85, "女性", cex=2)
text(4, 80, "男性", cex=2)
# 和歌山県
matpoints(t(LE[c(30,30+47),]) , type="l",
col=rgb(0,1,0, alpha=0.7),
lty=rep(1,47), lwd=1)
# 滋賀県
matpoints(t(LE[c(25,25+47),]) , type="l",
col=rgb(0,0,1, alpha=0.7),
lty=rep(1,47), lwd=3)
# 長野県
matpoints(t(LE[c(20,20+47),]) , type="l",
col=rgb(1,0,0, alpha=0.7),
lty=rep(2,2), lwd=1)
legend("bottomright", c("滋賀", "長野", "その他(45都道府県)"),
lty=c(1,2,1),
col=c("blue","red", "gray"),
lwd=c(2,2,2), cex=1.5)
legend("bottomright", c("滋賀", "長野", "和歌山", "その他(45都道府県)"),
lty=c(1,2,1),
col=c("blue","red", "green", "gray"),
lwd=c(2,2,2), cex=1.5)
legend("bottomright", c("滋賀", "長野", "和歌山", "その他(45都道府県)"),
lty=c(1,2,1),
col=c("blue","red", "green", "gray"),
lwd=c(2,2,2), cex=1.5)
legend("bottomright", c("滋賀", "長野", "和歌山", "その他(45都道府県)"),
lty=c(1,2,1, 1),
col=c("blue","red", "green", "gray"),
lwd=c(2,2,2), cex=1.5)
legend("bottomright", c("滋賀", "長野", "和歌山", "その他(44都道府県)"),
lty=c(1,2,1, 1),
col=c("blue","red", "green", "gray"),
lwd=c(2,2,2), cex=1.5)
tt2 %>% filter(tt2$pref.E=="Wakayama")
tt2 %>% filter(tt2$pref.E=="Wakayama") %>% write_csv("wakayama_trend.csv")
tt2 %>% filter(tt2$pref.E=="Wakayama")
tt2 %>% filter(tt2$pref.E=="Wakayama") %>% write.csv("wakayama_trend.csv")
Wakayama::d_common_standarize_long_density
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
Wakayama::d_common_standarize_long_density %>% tbl_df()
suppressMessages(library(tidyverse))
suppressMessages(library(plotly))
Wakayama::d_m %>% select(LE_2015) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number()) %>%DT::datatable()
Wakayama::d_m %>% select(LE_2015) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number())
Wakayama::d_m %>% select(LE_2015) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number()) %>%
xtable::xtable()
Wakayama::d_f %>% select(LE_2015) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number()) %>%
xtable::xtable()
Wakayama::d_m %>% select(HLE_2016) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number()) %>%
xtable::xtable()
Wakayama::d_m %>% select(HLE_2016) %>%
bind_cols(Wakayama::pref["pref.J"]) %>%
dplyr::arrange(HLE_2016) %>% mutate(rank=row_number()) %>%
xtable::xtable()
Wakayama::d_f %>% select(HLE_2016) %>%
bind_cols(Wakayama::pref["pref.J"]) %>%
dplyr::arrange(HLE_2016) %>% mutate(rank=row_number()) %>%
xtable::xtable()
system("open .")
