---
title: "来店解析 : no_profile_20200330.csv"
subtitle: "来店確率解析, CART 店舗比較 "
author: "滋賀大学 佐藤、李"
# date: "最終更新: `r format(Sys.time(), '%Y/%m/%d')`"
date: "最終更新: 2020/8/27 向け"

output:
  # word_document:
  html_document:
  # html_notebook:
   number_section: true
   toc: true
   code_folding: hide
   toc_float:
     smooth_scroll: false
     collapsed: false
  # fig_width: 18
  # fig_height: 12
---
# data 読み込みと変数削除
- final data name : d

## 以下の変数すべて含める
- 92直近来店からの経過月数
- 93過去３ヶ月以内来店回数
- 94過去6ヶ月以内来店回数 
- 95過去12ヶ月以内来店回数
- 97過去全期間来店回数
- 96過去３年以内来店回数

```{r}
# install.packages("./SMBC202006Pkg/", repos = NULL, type = "source")
library(SMBC202006Pkg)
suppressMessages(library(party))
suppressMessages(library(tidyverse))
suppressMessages(library(pROC))

d <-
SMBC202006Pkg::d1.rf 
# %>% select(
# -Num_of_months_since_the_last_visit,
# -Num_of_visits_past_3_months,
# -Num_of_visits_last_6_months,
# -Num_of_visits_last_12_months,
# # -Num_of_visits_past_3_years,
# -Num_of_visits_during_the_whole_period
# )

d$num_br <- as.factor(d$num_br)
d$info_job <- as.factor(d$info_job)
```

## data dimension and overall structure
```{r}
dim(d)
d %>% head() %>% DT::datatable()
```


:::: {style="display: flex;"}
:::{}
- 数値型
```{r, warning=FALSE}
d %>%select(where(is.numeric)) %>% colnames() %>% tbl_df()%>% DT::datatable()
```
:::
:::{}
- 因子型
```{r, warning=FALSE}
d %>%select(where(is.factor)) %>% colnames() %>% tbl_df() %>% DT::datatable()
```
:::
::::




# CART
## cart total
```{r}
cart.total <- ctree(y_binary ~ ., data = d,
                    controls = ctree_control(minsplit = 10 ^ 4 + 10 ^ 4 / 2))
cart.total

# varimp(cart.total)
```

### cart plot save and include

```{r , fig.cap="c caption", out.width = '100%'}
# a=1.8
# pdf(file = "cart.total10.pdf",width=12*a, height=5*a)
# plot(cart.total)
# dev.off()

knitr::include_graphics("cart.total10.pdf")
```

## predicted value - cart

```{r}
cart.total.predicted <-
  predict(cart.total, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()

Roc.total <- cbind(y=as.numeric(d$y_binary)-1, cart.total.predicted) %>% tbl_df()
```

- 全店舗
```{r, warning=F}
Roc.total %>% round(2) %>% DT::datatable()
```

# RF-来店確率

```{r}
suppressMessages(library(randomForest))
# rf.total <- randomForest(y_binary ~ ., data = d, method = "class")
# save.image("rf10.Rdata")

# load("rf10.Rdata")


rf.total<-SMBC202006Pkg::rf.total

rf.total$confusion
# rf.total$err.rate


pred.rf<-cbind(y=as.numeric(d$y_binary)-1,
predict(rf.total, newdata = d, type = "prob")
) 

pred.rf %>% DT::datatable()

```


```{r}
pred.rf %>% data.frame() %>% write.csv("pred.rf.csv")
Roc.total %>% write.csv("pred.cart.csv")
```


<!-- ## result of AUC -->
<!-- ```{r} -->

<!-- a<-roc( -->
<!--   Roc.total$y~Roc.total$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   # add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) -->



<!-- b<-roc( -->
<!--   Roc.Fukuoka$y~Roc.Fukuoka$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- )  -->


<!-- c<-roc( -->
<!--   Roc.Sapporo$y~Roc.Sapporo$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- )  -->



<!-- cbind(全店舗=a$auc, 福岡=b$auc,札幌=c$auc) -->

<!-- ``` -->


<!-- ## comparison of ROCs -->
<!-- ```{r} -->
<!-- col<- c("red", "green",  "blue") -->


<!-- par(family= "HiraKakuProN-W3") -->

<!-- roc( -->
<!--   Roc.total$y~Roc.total$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   # add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) %>% plot(col=col[1]) -->


<!-- roc( -->
<!--   Roc.Fukuoka$y~Roc.Fukuoka$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) %>% plot(add=T, col=col[2]) -->


<!-- roc( -->
<!--   Roc.Sapporo$y~Roc.Sapporo$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) %>% plot(add=T, col=col[3]) -->


<!-- legend("bottomright", -->
<!--   legend = c( -->
<!--     "全店舗", -->
<!--     "福岡", -->
<!--     "札幌" -->
<!--   ), -->
<!--   col = c("red", "green", "blue"), -->
<!--   lwd = 4 -->
<!-- ) -->

<!-- ``` -->

---
title: "来店解析 : no_profile_20200330.csv"
subtitle: "来店確率解析, CART、RF利用変数リスト、R sample コード "
author: "滋賀大学 佐藤、李"
# date: "最終更新: `r format(Sys.time(), '%Y/%m/%d')`"
date: "最終更新: 2020/9/24 向け"

output:
  # word_document:
  html_document:
  # html_notebook:
   number_section: true
   toc: true
   code_folding: hide
   toc_float:
     smooth_scroll: false
     collapsed: false
  # fig_width: 18
  # fig_height: 12
---

# install pkg and smbc pkg version
```{r}
# install.packages("./SMBC202006Pkg/", repos = NULL, type = "source")
library(SMBC202006Pkg)
suppressMessages(library(party))
suppressMessages(library(tidyverse))
suppressMessages(library(pROC))
packageVersion("SMBC202006Pkg")
```

# 変数リスト

## 分析に利用した変数（英語変数名）

```{r}
d <-  SMBC202006Pkg::d1.rf 
# %>% select(
# -Num_of_months_since_the_last_visit,
# -Num_of_visits_past_3_months,
# -Num_of_visits_last_6_months,
# -Num_of_visits_last_12_months,
# # -Num_of_visits_past_3_years,
# -Num_of_visits_during_the_whole_period
# )

d$num_br <- as.factor(d$num_br)
d$info_job <- as.factor(d$info_job)

use.var.name.E<-d %>% colnames() %>% data.frame(use.var.name.E=.)

# use.var.name.E %>% DT::datatable()
# 
# 
# head(use.var.name.E)
```

## 変数名、和英対応表
```{r}
var.name.list <- SMBC202006Pkg::var_jpn %>%
  bind_cols(., Eng = SMBC202006Pkg::var_eng$Eng)
  
var.name.list$Eng <- var.name.list$Eng %>% as.character()
var.name.list %>% DT::datatable()
```

## 分析に利用した変数の和英対応表
- **`分析に利用した変数の和英対応表.csv`**参考
```{r}
use.var.list.EJ<-left_join(use.var.name.E ,var.name.list , 
          by=c("use.var.name.E"="Eng")) 

# use.var.list.EJ%>% write.csv("bb.csv")

use.var.list.EJ %>% DT::datatable()

# full_join(var.name.list,use.var.name.E,
#                            by=c("Eng"="use.var.name.E")) %>% DT::datatable()
```


# 実装コード
## data 読み込みと点番号、職業コード因子型変換
- final data name : `d`

```{r, eval=F, echo=T}
d <- read.csv("CSV file 名", header = T)
d$num_br <- as.factor(d$num_br)
d$info_job <- as.factor(d$info_job)
```


<!-- ```{r} -->
<!-- d <- -->
<!-- SMBC202006Pkg::d1.rf  -->
<!-- # %>% select( -->
<!-- # -Num_of_months_since_the_last_visit, -->
<!-- # -Num_of_visits_past_3_months, -->
<!-- # -Num_of_visits_last_6_months, -->
<!-- # -Num_of_visits_last_12_months, -->
<!-- # # -Num_of_visits_past_3_years, -->
<!-- # -Num_of_visits_during_the_whole_period -->
<!-- # ) -->

<!-- d$num_br <- as.factor(d$num_br) -->
<!-- d$info_job <- as.factor(d$info_job) -->
<!-- ``` -->

<!-- ## data dimension and overall structure -->
<!-- ```{r} -->
<!-- dim(d) -->
<!-- d %>% head() %>% DT::datatable() -->
<!-- ``` -->


## CART R code
### cart total and predict value
```{r, eval=F}
library(party)
cart.total <- ctree(y_binary ~ ., data = d)
cart.total

# or  ctree_controlのoption 指定
# 例）
# cart.total <- ctree(y_binary ~ .,
#                     data = d,
#                     controls = ctree_control(minsplit = 数値を指定))


cart.total.predicted <-
predict(cart.total, type = "prob") %>%
purrr::map_dbl(.x = . , function(x) {
x[2]
})

# 実測、予測ペアー
Roc.total <-
cbind(y = as.numeric(d$y_binary) - 1, cart.total.predicted) 
```


## RF R code

```{r, eval=F}
library(randomForest)
rf.total <- randomForest(y_binary ~ ., data = d, method = "class")
rf.total$confusion
pred.rf <- cbind(y = as.numeric(d$y_binary) - 1,
predict(rf.total, newdata = d, type = "prob"))

# 実測、予測ペアー
pred.rf1 
```

<!-- ## predicted value - cart -->

<!-- ```{r} -->

<!-- cart.total <- ctree(y_binary ~ ., data = d, -->
<!--                     controls = ctree_control(minsplit = 10 ^ 4 + 10 ^ 4 / 2)) -->
<!-- cart.total -->


<!-- cart.total.predicted <- -->
<!--   predict(cart.total, type = "prob") %>% -->
<!--   purrr::map_dbl(.x = . , function(x) { -->
<!--     x[2] -->
<!--   }) %>% tbl_df() -->

<!-- Roc.total <- cbind(y=as.numeric(d$y_binary)-1, cart.total.predicted) %>% tbl_df() -->
<!-- ``` -->

<!-- - 全店舗 -->
<!-- ```{r, warning=F} -->
<!-- Roc.total %>% round(2) %>% DT::datatable() -->
<!-- ``` -->

<!-- # RF-来店確率 -->

<!-- ```{r} -->
<!-- suppressMessages(library(randomForest)) -->
<!-- # rf.total <- randomForest(y_binary ~ ., data = d, method = "class") -->
<!-- # save.image("rf10.Rdata") -->

<!-- # load("rf10.Rdata") -->


<!-- rf.total<-SMBC202006Pkg::rf.total -->

<!-- rf.total$confusion -->
<!-- # rf.total$err.rate -->


<!-- pred.rf<-cbind(y=as.numeric(d$y_binary)-1, -->
<!-- predict(rf.total, newdata = d, type = "prob") -->
<!-- )  -->

<!-- pred.rf %>% DT::datatable() -->

<!-- ``` -->

## 予測値をcsvファイルへ保存
```{r, eval=F}
# CART
write.csv(Roc.total, "file名.csv")

# RF 
write.csv(data.frame(pred.rf), "file名.csv")
```


<!-- ## result of AUC -->
<!-- ```{r} -->

<!-- a<-roc( -->
<!--   Roc.total$y~Roc.total$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   # add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) -->



<!-- b<-roc( -->
<!--   Roc.Fukuoka$y~Roc.Fukuoka$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- )  -->


<!-- c<-roc( -->
<!--   Roc.Sapporo$y~Roc.Sapporo$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- )  -->



<!-- cbind(全店舗=a$auc, 福岡=b$auc,札幌=c$auc) -->

<!-- ``` -->


<!-- ## comparison of ROCs -->
<!-- ```{r} -->
<!-- col<- c("red", "green",  "blue") -->


<!-- par(family= "HiraKakuProN-W3") -->

<!-- roc( -->
<!--   Roc.total$y~Roc.total$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   # add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) %>% plot(col=col[1]) -->


<!-- roc( -->
<!--   Roc.Fukuoka$y~Roc.Fukuoka$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) %>% plot(add=T, col=col[2]) -->


<!-- roc( -->
<!--   Roc.Sapporo$y~Roc.Sapporo$value, -->
<!--   plot = F, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   add = T, -->
<!--   print.auc.y = 0.6, -->
<!--   print.auc.x = 1/2 -->
<!-- ) %>% plot(add=T, col=col[3]) -->


<!-- legend("bottomright", -->
<!--   legend = c( -->
<!--     "全店舗", -->
<!--     "福岡", -->
<!--     "札幌" -->
<!--   ), -->
<!--   col = c("red", "green", "blue"), -->
<!--   lwd = 4 -->
<!-- ) -->

<!-- ``` -->

---
title: "来店解析 : no_profile_20200330.csv"
subtitle: "来店確率解析 "
author: "滋賀大学 佐藤、李"
date: "最終更新: `r format(Sys.time(), '%Y/%m/%d')`"
# date: "最終更新: 2019/07/16"

output:
  # word_document:
  html_document:
  # html_notebook:
   number_section: true
   toc: true
   code_folding: hide
   toc_float: 
    collapsed: false
    smooth_scroll: false
  
  # fig_width: 18
  # fig_height: 12
---


```{r, echo=FALSE}
library(data.table)
suppressMessages(library(tidyverse))
```


# data import
```{r,echo=FALSE}
d <- fread(file = "no_profile_20200330.csv", encoding = "UTF-8")
colnames(d) <- iconv(colnames(d), "cp932", "utf8")

source("0 aaaa.R")
d1 %>% colnames()
colnames(d1) <- read.table("var eng.txt", stringsAsFactors = F)[[1]]
d1 <- tbl_df(d1)
dim(d1)
```

```{r,echo=FALSE}
# report continuous variable 
nums <- unlist(lapply(d1, is.numeric))
df_new <- d1[, nums]
# install.packages("DataExplorer")
# DataExplorer::create_report(df_new)
```


# 支払い系変数の整理
```{r}
# d1[grepl(colnames(d1), pattern = "info_flg")] %>% colnames() %>% cat()
# d1[grepl(colnames(d1), pattern = "zido")]
d1 <-
  d1 %>% select(
    -info_flg_ng_tel_sales,
    -info_flg_in_income,
    -info_flg_in_pension,
    -info_flg_in_div,
    -info_flg_nhk,
    -info_flg_tel,
    -info_flg_electric,
    -info_flg_gas,
    -info_flg_water,
    -info_flg_othr
  )

```


# logistic reg(AIC 変数選択済み)

```{r}
# logistic.res<-glm(factor(d1$y_binary)~ . , data = d1[,-2], family=binomial())
# AIC.res<-MASS::stepAIC(logistic.res)
# save.image(file = "aa.Rdata")

load("aa.Rdata")

logistic.res %>% broom::tidy()

AIC.res %>% broom::tidy() %>% arrange(p.value) %>% tibble::column_to_rownames("term") %>% round(2) %>% DT::datatable()
```


# variable name 日本語、英語対応表 
```{r}

bind_cols(
read_csv("var eng.txt", col_names = "Eng"),
read_csv("var jpn.txt", col_names = "Jpn")
) %>% 
  # knitr::kable()
  DT::datatable()
```


# RF データ pre processing 
```{r}
d1.factor<-d1[sapply(d1, is.character)] %>% 
lapply(factor) %>% as.data.frame() %>% tbl_df()

d1.numeric<-d1[sapply(d1, is.numeric)]

d1.rf<-bind_cols(d1.factor, d1.numeric) %>% select(y_binary, everything()) %>% select(-y_count)
d1.rf$assign_branch_name_jp<-iconv(d1.rf$assign_branch_name_jp, "cp932", "utf8") 
d1.rf$assign_branch_name_jp<-as.factor(d1.rf$assign_branch_name_jp)
```


# RF fitting, importance
```{r, fig.width=10, fig.asp=1}
# set.seed(0) #乱数に再現性があるように初期値を固定
# index <- sample(1:nrow(d1.rf), round(nrow(d1.rf) * 0.6)) #6割で訓練、4割で評価
# 訓練データ
# d1.train <- d1.rf[index, ]
# d1.test <- d1.rf[-index, ]

suppressMessages(library(randomForest))
# s <- proc.time()
# d1.rf.train <- randomForest(y_binary ~ ., data = d1.train, method = "class")
# end <- s - proc.time()
#  ユーザ   システム       経過  
# -198.758     -2.057   -202.974 

# save.image("rf.Rdata")


load("rf.Rdata")
d1.rf.train$importance %>%
  tbl_df() %>%
  mutate(var = colnames(d1.train)[-1]) %>%
  arrange(desc(MeanDecreaseGini)) %>%
  # knitr::kable()
  DT::datatable()
par(family= "HiraKakuProN-W3")
varImpPlot(d1.rf.train)
```


```{r}
Predicted.train <- predict(d1.rf.train, d1.train, type="prob")
Predicted.test <- predict(d1.rf.train, d1.test, type="prob")
```

```{r}
Predicted.train %>% tbl_df()
Predicted.test %>% tbl_df()
```


```{r}
# AIC.res

m<-glm(formula = factor(d1$y_binary) ~ zido_barai + channel_desc + 
    category + age + gender + info_job + vintage + info_income + 
    Num_of_months_since_the_last_visit + Num_of_visits_past_3_months + 
    Num_of_visits_last_12_months + Num_of_visits_during_the_whole_period + 
    job_function + Total_deposit_balance + distance + IB_login_count + 
    Num_of_months_since_last_visit + Num_of_months_since_the_last_call + 
    Num_of_phone_call_differences_last_3_months + Num_of_phone_call_differences_last_12_months + 
    Num_of_phone_calls_differing_from_all_past_periods + Visits_last_12_months + 
    Num_of_visits_in_all_past_periods + Received_power_last_3_months + 
    icc_cnt, family = binomial(), data = d1[, -2])
m$fitted.values %>% tbl_df()
```

<!-- # ROC -->
<!-- ```{r,echo=FALSE, message=F} -->
<!-- library(pROC) -->
<!-- roc( -->
<!--   m$y ~ m$fitted.values,  -->
<!--   plot = T, -->
<!--   print.auc = T, -->
<!--   col = "red", -->
<!--   legacy.axes = T, -->
<!--   xlab="False Positive", -->
<!--   ylab="True Positive" -->
<!-- ) -->

<!-- # rf 訓練データ -->
<!-- roc( -->
<!--   d1.test$y_binary ~ Predicted.test[,2], -->
<!--   plot = T, -->
<!--   print.auc = T, -->
<!--   col = "blue", -->
<!--   add = T, -->
<!--   print.auc.y = 0.4, -->
<!--   print.auc.x = 1 -->

<!-- ) -->

<!-- # rf 評価データ -->
<!-- roc( -->
<!--   d1.train$y_binary ~ Predicted.train[,2], -->
<!--   plot = T, -->
<!--   print.auc = T, -->
<!--   col = "grey", -->
<!--   add = T, -->
<!--   print.auc.y = 0.3, -->
<!--   print.auc.x = 1 -->

<!-- ) -->


<!-- legend("bottomright", legend = c("logistic", "RF.test", "RF.train"),  -->
<!--        col = c("red", "blue", "grey"), lwd=4) -->

<!-- ``` -->
---
title: "来店解析 : no_profile_20200330.csv"
subtitle: "来店確率解析, RF, logistic, CART 比較 "
author: "滋賀大学 佐藤、李"
date: "最終更新: `r format(Sys.time(), '%Y/%m/%d')`"
# date: "最終更新: 2019/07/16"

output:
  # word_document:
  html_document:
  # html_notebook:
   number_section: true
   toc: true
   code_folding: hide
   toc_float:
     smooth_scroll: false
     collapsed: false



  # fig_width: 18
  # fig_height: 12
---




```{r}
rm(list=ls()); ls()
load("cart.Rdata");
load("predicted.rf.Rdata")
# 使用package
library(SMBC202006Pkg);
suppressMessages(library(tidyverse));
suppressMessages(library(party))
suppressMessages(library(randomForest))
ls()
```

#  RF 推定結果保存
```{r}
# predicted.rf.train <- predict(d1.rf.train, d1.train, type = "prob")
# predicted.rf.test <- predict(d1.rf.train, d1.test, type = "prob")
# save.image("predicted.rf.Rdata")
```



# CART 推定結果保存
```{r}
# res.cart.train <- ctree(y_binary ~ .,
#                         data = d1.train,
#                         controls = ctree_control(minsplit = 3, mincriterion = 0.9999))
# save.image("cart.Rdata")
```

## CART 結果確認
```{r}
res.cart.train
# plot(res.cart.train,type="simple", asp=4)
# plot(res.cart.train)
```

## CART plot 保存
```{r}
# pdf(file = "res.cart.train.pdf",
#     width = 20,
#     height = 7)
# plot(res.cart.train)
# dev.off()
```

## CART plot 再表示

```{r , fig.cap="c caption", out.width = '100%'}
# knitr::include_graphics("res.cart.train.pdf")
knitr::include_graphics("cart1.png")
```


## CART 予測確率
```{r}
predict.cart.train <-
  predict(res.cart.train, d1.train, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()

predict.cart.test <-
  predict(res.cart.train, d1.test, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()
```


:::: {style="display: flex;"}
:::{}
### train data
```{r}
predict.cart.train
```
:::
:::{}
### test data
```{r}
predict.cart.test
```
:::
::::





# ROC

## ３種のモデル予測確率 train and test data  

```{r}
pred.train<-cbind(
  rf = predicted.rf.train[, 2],
  logit = SMBC202006Pkg::predict.logit.train,
  cart = predict.cart.train$value) 

pred.test<-cbind(
  rf = predicted.rf.test[, 2],
  logit = SMBC202006Pkg::predict.logit.test,
  cart = predict.cart.test$value) 
```

:::: {style="display: flex;"}
:::{}
```{r}
pred.train %>% head() %>% round(3)
```
:::
:::{}
```{r}
pred.test %>% head() %>% round(3)
```
:::
::::



```{r}
suppressMessages(library(pROC))
# rf train データ
roc.rf.train<-roc(
  as.numeric(d1.train$y_binary) - 1 ~ pred.train[, 1],
  plot = F,
  print.auc = T,
  col = "red",
  # add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
)

roc.logit.train <-
  roc(
  as.numeric(d1.train$y_binary) - 1 ~ pred.train[, 2],
  plot = F,
  print.auc = T,
  col = "green",
  # add = T,
  print.auc.y = 0.5,
  print.auc.x = 1 / 2
  )
  
roc.cart.train <-
  roc(
  as.numeric(d1.train$y_binary) - 1 ~ pred.train[, 3],
  plot = F,
  print.auc = T,
  col = "blue",
  # add = T,
  print.auc.y = 0.4,
  print.auc.x = 1 / 2
  )
  

roc.rf.test <-
  roc(
  as.numeric(d1.test$y_binary) - 1 ~ pred.test[, 1],
  plot = F,
  print.auc = T,
  col = "red",
  # add = T,
  print.auc.y = 0.3,
  print.auc.x = 1 / 2
  )
  
roc.logit.test <-
  roc(
  as.numeric(d1.test$y_binary) - 1 ~ pred.test[, 2],
  plot = F,
  print.auc = T,
  col = "green",
  # add = T,
  print.auc.y = 0.2,
  print.auc.x = 1 / 2
  )
  
roc.cart.test <-
  roc(
  as.numeric(d1.test$y_binary) - 1 ~ pred.test[, 3],
  plot = F,
  print.auc = T,
  col = "blue",
  # add = T,
  print.auc.y = 0.1,
  print.auc.x = 1 / 2
  )
  
plot(roc.rf.train, col = "red")
plot(roc.rf.test, add = T, col = "red")

plot(roc.logit.train, add = T, col = "green")
plot(roc.logit.test, add = T, col = "green")

plot(roc.cart.train, add = T, col = "blue")
plot(roc.cart.test, add = T, col = "blue")



legend("bottomright",legend = c("RF.train",  "Logistic.train",  "CART.train",  "RF.test",  "Logistic.test",  "CART.test"),col = c("red", "green", "blue"),
  lwd = 4
)

```

## auc



:::: {style="display: flex;"}
:::{}
```{r}
roc.rf.train$auc
```
:::

:::{}
```{r}
roc.rf.test$auc
```
:::

:::{}
```{r}
roc.logit.train$auc
```
:::

:::{}
```{r}
roc.logit.test $auc
```
:::

:::{}
```{r}
roc.cart.train$auc

```
:::

:::{}
```{r}
roc.cart.test$auc
```
:::

::::


```{r}
# png("cart.png",pointsize=40,height=2080,width=5000)
# plot(res.cart.train)
# dev.off()
```


---
title: "来店解析 : no_profile_20200330.csv"
subtitle: "来店確率解析, CART 店舗比較 "
author: "滋賀大学 佐藤、李"
# date: "最終更新: `r format(Sys.time(), '%Y/%m/%d')`"
date: "最終更新: 2020/07/16 向け"

output:
  # word_document:
  html_document:
  # html_notebook:
   number_section: true
   toc: true
   code_folding: hide
   toc_float:
     smooth_scroll: false
     collapsed: false
  # fig_width: 18
  # fig_height: 12
---

# data 読み込みと変数削除
- final data name : d

# 92直近来店からの経過月数
- 93過去３ヶ月以内来店回数
- 94過去6ヶ月以内来店回数 
- 95過去12ヶ月以内来店回数
- 96過去３年以内来店回数
- 97過去全期間来店回数

```{r}
# install.packages("./SMBC202006Pkg/", repos = NULL, type = "source")
library(SMBC202006Pkg)
suppressMessages(library(party))
suppressMessages(library(tidyverse))
suppressMessages(library(pROC))

d <-
SMBC202006Pkg::d1.rf %>% select(
-Num_of_months_since_the_last_visit,
-Num_of_visits_past_3_months,
-Num_of_visits_last_6_months,
-Num_of_visits_last_12_months,
-Num_of_visits_past_3_years,
-Num_of_visits_during_the_whole_period
)

d$num_br <- as.factor(d$num_br)
d$info_job <- as.factor(d$info_job)
```

## data dimension and overall structure
```{r}
dim(d)
d %>% head() %>% DT::datatable()
```

# CART
## cart total
```{r}
cart.total <- ctree(y_binary ~ ., data = d,
                    controls = ctree_control(minsplit = 10 ^ 4 + 10 ^ 4 / 2))
cart.total
```

### cart plot save and include

```{r , fig.cap="c caption", out.width = '100%'}
# a=1.8
# pdf(file = "cart.total.pdf",width=12*a, height=5*a)
# plot(cart.total)
# dev.off()

knitr::include_graphics("cart.total.pdf")
```

## cart 福岡 (num_br==45)

```{r}
# num_br==45 
d.Fukuoka<-d%>%filter(num_br==45) %>% select(-num_br)


cart.Fukuoka<-ctree(y_binary ~ .,data = d.Fukuoka, controls = ctree_control(minsplit =20))

cart.Fukuoka

cart.Fukuoka %>% plot()

```


## cart 札幌 (num_br==35)

```{r}
d.Sapporo<-d%>%filter(num_br==35) %>% select(-num_br)

cart.Sapporo <- ctree(y_binary ~ ., data = d.Sapporo)
cart.Sapporo
```


# ROC

## predicted value

```{r}
cart.total.predicted <-
  predict(cart.total, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()



cart.Sapporo.predicted <-
  predict(cart.Sapporo, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()

cart.Fukuoka.predicted <-
  predict(cart.Fukuoka, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()



# cbind(cart.total.predicted,cart.Sapporo.predicted,cart.Fukuoka.predicted)

Roc.total <- cbind(y=as.numeric(d$y_binary)-1, cart.total.predicted) %>% tbl_df()
Roc.Sapporo <- cbind(y=as.numeric(d.Sapporo$y_binary)-1, cart.Sapporo.predicted) %>% tbl_df()
Roc.Fukuoka <- cbind(y=as.numeric(d.Fukuoka$y_binary)-1, cart.Fukuoka.predicted) %>% tbl_df()

```

### pred
:::: {style="display: flex;"}
:::{}
- 全店舗
```{r, warning=F}
Roc.total %>% round(2) %>% DT::datatable()
```
:::
:::{}
- 札幌
```{r}
Roc.Sapporo %>% round(2) %>% DT::datatable()
```
:::
:::{}
- 福岡
```{r}
Roc.Fukuoka %>% round(2) %>% DT::datatable()
```
:::
::::


## result of AUC
```{r}

a<-roc(
  Roc.total$y~Roc.total$value,
  plot = F,
  print.auc = T,
  col = "red",
  # add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
)



b<-roc(
  Roc.Fukuoka$y~Roc.Fukuoka$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) 


c<-roc(
  Roc.Sapporo$y~Roc.Sapporo$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) 



cbind(全店舗=a$auc, 福岡=b$auc,札幌=c$auc)

```


## comparison of ROCs
```{r}
col<- c("red", "green",  "blue")


par(family= "HiraKakuProN-W3")

roc(
  Roc.total$y~Roc.total$value,
  plot = F,
  print.auc = T,
  col = "red",
  # add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) %>% plot(col=col[1])


roc(
  Roc.Fukuoka$y~Roc.Fukuoka$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) %>% plot(add=T, col=col[2])


roc(
  Roc.Sapporo$y~Roc.Sapporo$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) %>% plot(add=T, col=col[3])


legend("bottomright",
  legend = c(
    "全店舗",
    "福岡",
    "札幌"
  ),
  col = c("red", "green", "blue"),
  lwd = 4
)

```

---
title: "来店解析 : no_profile_20200330.csv"
subtitle: "来店確率解析, CART 店舗比較 "
author: "滋賀大学 佐藤、李"
# date: "最終更新: `r format(Sys.time(), '%Y/%m/%d')`"
date: "最終更新: 2020/8 向け"

output:
  # word_document:
  html_document:
  # html_notebook:
   number_section: true
   toc: true
   code_folding: hide
   toc_float:
     smooth_scroll: false
     collapsed: false
  # fig_width: 18
  # fig_height: 12
---
# data 読み込みと変数削除
- final data name : d

## 削除
- 92直近来店からの経過月数
- 93過去３ヶ月以内来店回数
- 94過去6ヶ月以内来店回数 
- 95過去12ヶ月以内来店回数
- 97過去全期間来店回数

## 残留
- 96過去３年以内来店回数

```{r}
# install.packages("./SMBC202006Pkg/", repos = NULL, type = "source")
library(SMBC202006Pkg)
suppressMessages(library(party))
suppressMessages(library(tidyverse))
suppressMessages(library(pROC))

d <-
SMBC202006Pkg::d1.rf %>% select(
-Num_of_months_since_the_last_visit,
-Num_of_visits_past_3_months,
-Num_of_visits_last_6_months,
-Num_of_visits_last_12_months,
# -Num_of_visits_past_3_years,
-Num_of_visits_during_the_whole_period
)

d$num_br <- as.factor(d$num_br)
d$info_job <- as.factor(d$info_job)
```

## data dimension and overall structure
```{r}
dim(d)
d %>% head() %>% DT::datatable()
```

# CART
## cart total
```{r}
cart.total <- ctree(y_binary ~ ., data = d,
                    controls = ctree_control(minsplit = 10 ^ 4 + 10 ^ 4 / 2))
cart.total

# varimp(cart.total)
```

### cart plot save and include

```{r , fig.cap="c caption", out.width = '100%'}
# a=1.8
# pdf(file = "cart.total8.pdf",width=12*a, height=5*a)
# plot(cart.total)
# dev.off()

knitr::include_graphics("cart.total8.pdf")
```

## cart 福岡 (num_br==45)

```{r}
# num_br==45 
d.Fukuoka<-d%>%filter(num_br==45) %>% select(-num_br)


cart.Fukuoka<-ctree(y_binary ~ .,data = d.Fukuoka, controls = ctree_control(minsplit =20))

cart.Fukuoka

cart.Fukuoka %>% plot()

```


## cart 札幌 (num_br==35)

```{r}
d.Sapporo<-d%>%filter(num_br==35) %>% select(-num_br)

cart.Sapporo <- ctree(y_binary ~ ., data = d.Sapporo, controls = ctree_control(minsplit =20))
cart.Sapporo %>% plot()
```


# ROC

## predicted value

```{r}
cart.total.predicted <-
  predict(cart.total, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()



cart.Sapporo.predicted <-
  predict(cart.Sapporo, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()

cart.Fukuoka.predicted <-
  predict(cart.Fukuoka, type = "prob") %>%
  purrr::map_dbl(.x = . , function(x) {
    x[2]
  }) %>% tbl_df()



# cbind(cart.total.predicted,cart.Sapporo.predicted,cart.Fukuoka.predicted)

Roc.total <- cbind(y=as.numeric(d$y_binary)-1, cart.total.predicted) %>% tbl_df()
Roc.Sapporo <- cbind(y=as.numeric(d.Sapporo$y_binary)-1, cart.Sapporo.predicted) %>% tbl_df()
Roc.Fukuoka <- cbind(y=as.numeric(d.Fukuoka$y_binary)-1, cart.Fukuoka.predicted) %>% tbl_df()

```

### pred
:::: {style="display: flex;"}
:::{}
- 全店舗
```{r, warning=F}
Roc.total %>% round(2) %>% DT::datatable()
```
:::
:::{}
- 札幌
```{r}
Roc.Sapporo %>% round(2) %>% DT::datatable()
```
:::
:::{}
- 福岡
```{r}
Roc.Fukuoka %>% round(2) %>% DT::datatable()
```
:::
::::


## result of AUC
```{r}

a<-roc(
  Roc.total$y~Roc.total$value,
  plot = F,
  print.auc = T,
  col = "red",
  # add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
)



b<-roc(
  Roc.Fukuoka$y~Roc.Fukuoka$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) 


c<-roc(
  Roc.Sapporo$y~Roc.Sapporo$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) 



cbind(全店舗=a$auc, 福岡=b$auc,札幌=c$auc)

```


## comparison of ROCs
```{r}
col<- c("red", "green",  "blue")


par(family= "HiraKakuProN-W3")

roc(
  Roc.total$y~Roc.total$value,
  plot = F,
  print.auc = T,
  col = "red",
  # add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) %>% plot(col=col[1])


roc(
  Roc.Fukuoka$y~Roc.Fukuoka$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) %>% plot(add=T, col=col[2])


roc(
  Roc.Sapporo$y~Roc.Sapporo$value,
  plot = F,
  print.auc = T,
  col = "red",
  add = T,
  print.auc.y = 0.6,
  print.auc.x = 1/2
) %>% plot(add=T, col=col[3])


legend("bottomright",
  legend = c(
    "全店舗",
    "福岡",
    "札幌"
  ),
  col = c("red", "green", "blue"),
  lwd = 4
)

```

